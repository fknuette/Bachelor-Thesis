name: In pull request
on:
  pull_request:
    branches:
      - main

jobs:
  check_python_linting:
    name: Ruff Linting & Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: astral-sh/ruff-action@84f83ecf9e1e15d26b7984c7ec9cf73d39ffc946 # v3.3.1
        with:
          src: "./src ./tests"
          version: 0.8.6
      - uses: astral-sh/ruff-action@84f83ecf9e1e15d26b7984c7ec9cf73d39ffc946 # v3.3.1
        with:
          src: "./src ./tests"
          version: 0.8.6
          args: 'format --check'

  test_compatibility:
    name: Test Package Compatibility
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python-version: "3.9"
            dependency-set: minimum
          - os: macos-13 # macos-latest doesn't work with python 3.10
            # https://github.com/actions/setup-python/issues/855
            python-version: "3.9"
            dependency-set: minimum
          - os: windows-latest
            python-version: "3.9"
            dependency-set: minimum
          - os: ubuntu-latest
            python-version: "3.13"
            dependency-set: maximum
          - os: macos-latest
            python-version: "3.13"
            dependency-set: maximum
          - os: windows-latest
            python-version: "3.13"
            dependency-set: maximum
    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Install uv
        uses: astral-sh/setup-uv@6b9c6063abd6010835644d4c2e1bef4cf5cd0fca # v6.0.1
        with:
          enable-cache: true

      - name: Generate requirements file for minimum dependencies
        if: matrix.dependency-set == 'minimum'
        run: |
          python scripts/get_min_dependencies.py

      - name: Generate requirements file for maximum dependencies
        if: matrix.dependency-set == 'maximum'
        run: |
          python scripts/get_max_dependencies.py

      - name: Install dependencies
        run: |
          uv pip install --system --no-deps .
          # onnx is required for onnx export tests
          # we don't install all dev dependencies here for speed
          uv pip install --system -r requirements.txt
          uv pip install --system pytest psutil
          # onnx is not supported on python 3.13 yet https://github.com/onnx/onnx/issues/6339
          if [[ "${{ matrix.python-version }}" != "3.13" ]]; then
            uv pip install --system onnx
          fi
        shell: bash

      - name: Initialize submodules
        run: git submodule update --init --recursive

      - name: Run Tests
        run: |
          pytest tests/
